<?php

namespace App\Http\Controllers\SuperAdmin\Report;

use App\Http\Controllers\Controller;
use App\Models\Report;
use App\Models\Booking;
use App\Models\Guest;
use App\Models\Room;
use App\Models\Payment;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Response;

class ReportController extends Controller
{
    /**
     * List all reports
     */
    public function index()
    {
        $reports = Report::latest()->paginate(10);
        return view('superadmin.report.report_management', compact('reports'));
    }

    /**
     * Generate a new report
     */
    public function generate(Request $request, string $type)
    {
        // Agar user ne form me report_type bheja hai to usko override karo
        if ($request->has('report_type') && !empty($request->report_type)) {
            $type = $request->report_type;
        }

        $filters = [
            'date_from' => $request->date_from,
            'date_to' => $request->date_to,
        ];

        $data = collect(); // default empty collection

        switch ($type) {
            case 'booking':
                $data = \App\Models\Booking::with(['guest', 'room'])
                    ->when($request->date_from, fn($q) => $q->whereDate('check_in', '>=', $request->date_from))
                    ->when($request->date_to, fn($q) => $q->whereDate('check_out', '<=', $request->date_to))
                    ->get();
                break;

            case 'guest':
                $data = \App\Models\Guest::query()
                    ->when($request->date_from, fn($q) => $q->whereDate('created_at', '>=', $request->date_from))
                    ->when($request->date_to, fn($q) => $q->whereDate('created_at', '<=', $request->date_to))
                    ->get();
                break;

            case 'room':
                $data = \App\Models\Room::all();
                break;

            case 'payment':
                $data = \App\Models\Payment::with('booking')
                    ->when($request->date_from, fn($q) => $q->whereDate('payment_date', '>=', $request->date_from))
                    ->when($request->date_to, fn($q) => $q->whereDate('payment_date', '<=', $request->date_to))
                    ->get();
                break;

            default:
                return back()->with('error', 'Invalid report type selected.');
        }

        // Save report in DB
        \App\Models\Report::create([
            'report_type' => $type,
            'generated_by' => \Auth::id(),
            'filters' => $filters,
            'data' => $data->toArray(),
        ]);

        return redirect()->route('reports.index')
            ->with('success', ucfirst($type) . ' report generated successfully!');
    }


    /**
     * Show single report
     */
    public function show($id)
    {
        $report = Report::findOrFail($id);
        return view('superadmin.report.show', compact('report'));
    }

    /**
     * Delete a report
     */
    public function destroy($id)
    {
        $report = Report::findOrFail($id);
        $report->delete();

        return back()->with('success', 'Report deleted successfully.');
    }
    public function export()
    {
        $reports = Report::latest()->get();

        // CSV Header
        $csvData = "ID,Report Type,Generated By,Start Date,End Date,Created At\n";

        foreach ($reports as $report) {
            $filters = $report->filters ?? [];
            $dateFrom = $filters['date_from'] ?? '---';
            $dateTo = $filters['date_to'] ?? '---';

            $csvData .= "{$report->id},"
                . ucfirst($report->report_type) . ","
                . ($report->user?->name ?? 'System') . ","
                . $dateFrom . ","
                . $dateTo . ","
                . $report->created_at->format('d M Y H:i') . "\n";
        }

        $filename = 'reports.csv';

        return Response::make($csvData, 200, [
            'Content-Type' => 'text/csv',
            'Content-Disposition' => 'attachment; filename="' . $filename . '"',
        ]);
    }

}
